name: ci

permissions:
  contents: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: arc-runner-set

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "21"

      - name: Install dependencies
        run: npm ci --save-dev

      - name: Run tests
        run: npm run test

  semantic-release:
    runs-on: arc-runner-set
    concurrency:
      group: semantic-release
    needs:
      - test
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run ptsemrelease.py
        run: |
          python3 scripts/ptsemrelease.py \
              --version 0.0.0 \
              --prerelease-pattern develop develop \
              --commit \
              --commit-push \
              --tag \
              --tag-create-for-prerelease \
              --tag-force \
              --tag-force-push \
              --tag-push \
              --branch \
              --branch-force \
              --branch-push \
              --branch-create-minor \
              --branch-create-major \
              --string-write ./VERSION \
              --json-write ./public/manifest.json version \
              --json-write ./package.json version

  build:
    runs-on: arc-runner-set
    needs:
      - test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Run ptsemrelease.py
        run: |
          python3 scripts/ptsemrelease.py \
              --version 0.0.0 \
              --string-write ./VERSION \
              --json-write ./public/manifest.json version \
              --json-write ./package.json version

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "21"

      - name: Install dependencies
        run: npm ci --save-dev

      - name: Run tests
        run: npm run test

      - name: Install software
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
            sudo apt-get install -y \
            ca-certificates \
            fonts-liberation \
            libappindicator1 \
            libasound2 \
            libatk1.0-0 \
            libc6 \
            libcairo2 \
            libcups2 \
            libdbus-1-3 \
            libexpat1 \
            libfontconfig1 \
            libgbm1 \
            libgcc1 \
            libgconf-2-4 \
            libgdk-pixbuf2.0-0 \
            libglib2.0-0 \
            libgtk-3-0 \
            libnspr4 \
            libnss3 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libstdc++6 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            lsb-release \
            wget \
            xdg-utils \
            zip

      - name: "Get CRX secret"
        # In CRX_PEM environment variable
        run: echo "${{ secrets.CRX_PEM }}" > dist.pem

      - name: "Build: Unpacked"
        run: |
          npm run all

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          # All crx and zip in dist
          path: dist/*
